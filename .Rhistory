data_all <- data_all[,!(colnames(data_all) %in% non_required_cols)]
# data_all <- data_all %>% mutate(mf_ratio = (`2018male` / `2018female`))
data_all <- data_all %>% mutate(age65_ratio = (`age>65` / `2018total`))
# data_all <- data_all %>% mutate(age15_to64_ratio = (`age15-64` / `2018total`))
# data_all <- data_all %>% mutate(age0_to14_ratio = (`age 0-14` / `2018total`))
non_required_cols_1 <- c("age 0-14", "age15-64",  "age>65","2018total","2018male", "2018female")
data_all <- data_all[,!(colnames(data_all) %in% non_required_cols_1)]
non_required_cols_2 <- c("Incidence","Mortality","Recovery_R")
data_all <- data_all[,!(colnames(data_all) %in% non_required_cols_2)]
new_data <- data_all
new_data$Region_EN <- NULL
# new_data$mf_ratio <- NULL
new_data <- apply(new_data, 2, scale)
cls=kmeans(new_data,3)
data_all$group <- cls$cluster
group1 <- data_all[which(data_all$group == 1),"Region_EN"]
group2 <- data_all[which(data_all$group == 2),"Region_EN"]
group3 <- data_all[which(data_all$group == 3),"Region_EN"]
group1
g1<-readRDS("outputs/rds/group1_temp.rds")
match(group1,g)
match(group1,g1)
g1<-readRDS("outputs/rds/group2_temp.rds")
match(group2,g1)
g2<-readRDS("outputs/rds/group2_without_mf.rds")
match(group2,g2)
match(g1,g2)
library(readxl)
library(plyr)
set.seed(123)
china_incidence <- read_excel("data/chinesedata/Copy of China_C19.dbf.xlsx")
china_incidence <- china_incidence[!is.na(china_incidence$Region_EN),]
china_incidence$Region_EN <- make.unique(china_incidence$Region_EN)
china_population <- read_excel("data/chinesedata/population data-zwy.xlsx")
china_population <- china_population[!is.na(china_population$Region_EN),]
china_population$Region_EN <- make.unique(china_population$Region_EN)
data <- join(china_incidence,china_population,by = "Region_EN")
data <- data[data$Region_EN != "Wuhan",]
# name_data <- china_population[,c("Region_EN","地区名称")]
# rownames(name_data) <- name_data$Region_EN
# name_data$Region_EN <- NULL
# write_rds(name_data,"outputs/prefecture_names.rds")
data$地区名称 <- NULL
data = data[which(data$Incidence != 0),]
# data = data[which(data$Recovery_R != 0),]
# data = data[which(data$Mortality != 0),]
data <- drop_na(data)
#
new_data = data[,c("Incidence","Recovery_R","Mortality")]
# new_data <- apply(new_data, 2, scale)
# cls=kmeans(new_data,3)
# data$group <- cls$cluster
# new_data <- cls$cluster
#
# n_data <- data[,!(colnames(data) %in% c("2018total","2018male","2018female","age 0-14","age15-64"  ,"age>65"))]
# n_data<- n_data[which(n_data$group==3),]
# print(n_data)
#
# data_init <- data
#
# group1 <- data_init[which(data_init$group == 1),"Region_EN"]
# group2 <- data_init[which(data_init$group == 2),"Region_EN"]
# group3 <- data_init[which(data_init$group == 3),"Region_EN"]
#
# # print(group1)
# #
# write_rds(group1,"outputs/rds/group1_incidence.rds")
# write_rds(group2,"outputs/rds/group2_incidence.rds")
# write_rds(group3,"outputs/rds/group3_incidence.rds")
#
min_temp <- read_excel("data/chinesedata/Min_Temperature.xlsx")
min_temp <- as.data.frame(min_temp)
min_temp$Region_CN = NULL
rownames(min_temp) <- make.unique(min_temp$Region_EN)
min_temp$Region_EN <-NULL
min_col <- apply(min_temp, 1, FUN=min)
min_temp$min_min_col <- min_col
mean_col <- apply(min_temp, 1, FUN=mean)
min_temp$mean_min_col <- mean_col
max_col <- apply(min_temp, 1, FUN=max)
min_temp$max_min_col <- max_col
min_temp <- min_temp[,c("min_min_col","mean_min_col","max_min_col")]
mean_temp <- read_excel("data/chinesedata/Mean_Temperature.xlsx")
mean_temp <- as.data.frame(mean_temp)
mean_temp$Region_CN = NULL
rownames(mean_temp) <- make.unique(mean_temp$Region_EN)
mean_temp$Region_EN <-NULL
min_col <- apply(mean_temp, 1, FUN=min)
mean_temp$min_mean_col <- min_col
mean_col <- apply(mean_temp, 1, FUN=mean)
mean_temp$mean_mean_col <- mean_col
max_col <- apply(mean_temp, 1, FUN=max)
mean_temp$max_mean_col <- max_col
mean_temp <- mean_temp[,c("min_mean_col","mean_mean_col","max_mean_col")]
max_temp <- read_excel("data/chinesedata/Max_Temperature.xlsx")
max_temp <- as.data.frame(max_temp)
max_temp$Region_CN = NULL
rownames(max_temp) <- make.unique(max_temp$Region_EN)
max_temp$Region_EN <-NULL
min_col <- apply(max_temp, 1, FUN=min)
max_temp$min_max_col <- min_col
mean_col <- apply(max_temp, 1, FUN=mean)
max_temp$mean_max_col <- mean_col
max_col <- apply(max_temp, 1, FUN=max)
max_temp$max_max_col <- max_col
max_temp <- max_temp[,c("min_max_col","mean_max_col","max_max_col")]
min_temp$Region_EN <- rownames(min_temp)
mean_temp$Region_EN <- rownames(mean_temp)
max_temp$Region_EN <- rownames(max_temp)
data_all <- join(data,min_temp,by="Region_EN")
data_all <- join(data_all,mean_temp,by="Region_EN")
data_all <- join(data_all,max_temp,by="Region_EN")
data_all <- drop_na(data_all)
non_required_cols <- c("Pop_2018", "Total_Recover" ,"Tota_death","Total_confirm_cases")
data_all <- data_all[,!(colnames(data_all) %in% non_required_cols)]
# data_all <- data_all %>% mutate(mf_ratio = (`2018male` / `2018female`))
data_all <- data_all %>% mutate(age65_ratio = (`age>65` / `2018total`))
# data_all <- data_all %>% mutate(age15_to64_ratio = (`age15-64` / `2018total`))
# data_all <- data_all %>% mutate(age0_to14_ratio = (`age 0-14` / `2018total`))
non_required_cols_1 <- c("age 0-14", "age15-64",  "age>65","2018total","2018male", "2018female")
data_all <- data_all[,!(colnames(data_all) %in% non_required_cols_1)]
# non_required_cols_2 <- c("Incidence","Mortality","Recovery_R")
# data_all <- data_all[,!(colnames(data_all) %in% non_required_cols_2)]
new_data <- data_all
new_data$Region_EN <- NULL
# new_data$mf_ratio <- NULL
new_data <- apply(new_data, 2, scale)
cls=kmeans(new_data,3)
data_all$group <- cls$cluster
group1 <- data_all[which(data_all$group == 1),"Region_EN"]
group2 <- data_all[which(data_all$group == 2),"Region_EN"]
group3 <- data_all[which(data_all$group == 3),"Region_EN"]
match(group1,g1)
match(group2,g1)
colnames(data_all)
library(readxl)
library(plyr)
set.seed(123)
china_incidence <- read_excel("data/chinesedata/Copy of China_C19.dbf.xlsx")
china_incidence <- china_incidence[!is.na(china_incidence$Region_EN),]
china_incidence$Region_EN <- make.unique(china_incidence$Region_EN)
china_population <- read_excel("data/chinesedata/population data-zwy.xlsx")
china_population <- china_population[!is.na(china_population$Region_EN),]
china_population$Region_EN <- make.unique(china_population$Region_EN)
data <- join(china_incidence,china_population,by = "Region_EN")
data <- data[data$Region_EN != "Wuhan",]
# name_data <- china_population[,c("Region_EN","地区名称")]
# rownames(name_data) <- name_data$Region_EN
# name_data$Region_EN <- NULL
# write_rds(name_data,"outputs/prefecture_names.rds")
data$地区名称 <- NULL
data = data[which(data$Incidence != 0),]
# data = data[which(data$Recovery_R != 0),]
# data = data[which(data$Mortality != 0),]
data <- drop_na(data)
#
new_data = data[,c("Incidence","Recovery_R","Mortality")]
# new_data <- apply(new_data, 2, scale)
# cls=kmeans(new_data,3)
# data$group <- cls$cluster
# new_data <- cls$cluster
#
# n_data <- data[,!(colnames(data) %in% c("2018total","2018male","2018female","age 0-14","age15-64"  ,"age>65"))]
# n_data<- n_data[which(n_data$group==3),]
# print(n_data)
#
# data_init <- data
#
# group1 <- data_init[which(data_init$group == 1),"Region_EN"]
# group2 <- data_init[which(data_init$group == 2),"Region_EN"]
# group3 <- data_init[which(data_init$group == 3),"Region_EN"]
#
# # print(group1)
# #
# write_rds(group1,"outputs/rds/group1_incidence.rds")
# write_rds(group2,"outputs/rds/group2_incidence.rds")
# write_rds(group3,"outputs/rds/group3_incidence.rds")
#
min_temp <- read_excel("data/chinesedata/Min_Temperature.xlsx")
min_temp <- as.data.frame(min_temp)
min_temp$Region_CN = NULL
rownames(min_temp) <- make.unique(min_temp$Region_EN)
min_temp$Region_EN <-NULL
min_col <- apply(min_temp, 1, FUN=min)
min_temp$min_min_col <- min_col
mean_col <- apply(min_temp, 1, FUN=mean)
min_temp$mean_min_col <- mean_col
max_col <- apply(min_temp, 1, FUN=max)
min_temp$max_min_col <- max_col
min_temp <- min_temp[,c("min_min_col","mean_min_col","max_min_col")]
mean_temp <- read_excel("data/chinesedata/Mean_Temperature.xlsx")
mean_temp <- as.data.frame(mean_temp)
mean_temp$Region_CN = NULL
rownames(mean_temp) <- make.unique(mean_temp$Region_EN)
mean_temp$Region_EN <-NULL
min_col <- apply(mean_temp, 1, FUN=min)
mean_temp$min_mean_col <- min_col
mean_col <- apply(mean_temp, 1, FUN=mean)
mean_temp$mean_mean_col <- mean_col
max_col <- apply(mean_temp, 1, FUN=max)
mean_temp$max_mean_col <- max_col
mean_temp <- mean_temp[,c("min_mean_col","mean_mean_col","max_mean_col")]
max_temp <- read_excel("data/chinesedata/Max_Temperature.xlsx")
max_temp <- as.data.frame(max_temp)
max_temp$Region_CN = NULL
rownames(max_temp) <- make.unique(max_temp$Region_EN)
max_temp$Region_EN <-NULL
min_col <- apply(max_temp, 1, FUN=min)
max_temp$min_max_col <- min_col
mean_col <- apply(max_temp, 1, FUN=mean)
max_temp$mean_max_col <- mean_col
max_col <- apply(max_temp, 1, FUN=max)
max_temp$max_max_col <- max_col
max_temp <- max_temp[,c("min_max_col","mean_max_col","max_max_col")]
min_temp$Region_EN <- rownames(min_temp)
mean_temp$Region_EN <- rownames(mean_temp)
max_temp$Region_EN <- rownames(max_temp)
data_all <- join(data,min_temp,by="Region_EN")
data_all <- join(data_all,mean_temp,by="Region_EN")
data_all <- join(data_all,max_temp,by="Region_EN")
data_all <- drop_na(data_all)
non_required_cols <- c("Pop_2018", "Total_Recover" ,"Tota_death","Total_confirm_cases")
data_all <- data_all[,!(colnames(data_all) %in% non_required_cols)]
# data_all <- data_all %>% mutate(mf_ratio = (`2018male` / `2018female`))
data_all <- data_all %>% mutate(age65_ratio = (`age>65` / `2018total`))
data_all <- data_all %>% mutate(age15_to64_ratio = (`age15-64` / `2018total`))
data_all <- data_all %>% mutate(age0_to14_ratio = (`age 0-14` / `2018total`))
non_required_cols_1 <- c("age 0-14", "age15-64",  "age>65","2018total","2018male", "2018female")
data_all <- data_all[,!(colnames(data_all) %in% non_required_cols_1)]
# non_required_cols_2 <- c("Incidence","Mortality","Recovery_R")
# data_all <- data_all[,!(colnames(data_all) %in% non_required_cols_2)]
new_data <- data_all
new_data$Region_EN <- NULL
# new_data$mf_ratio <- NULL
new_data <- apply(new_data, 2, scale)
cls=kmeans(new_data,3)
data_all$group <- cls$cluster
group1 <- data_all[which(data_all$group == 1),"Region_EN"]
group2 <- data_all[which(data_all$group == 2),"Region_EN"]
group3 <- data_all[which(data_all$group == 3),"Region_EN"]
match(group2,g1)
colnames(data_all)
install.packages(“Rtsne”)
install.packages("Rtsne")
library(Rtnse)
library(Rtsne)
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/province_clustering.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
colnames(data_all)
plot(tsne$Y, t='n', main="tsne")
tsne <-Rtsne(new_data,dims = 2, perplexity=30, verbose=TRUE, max_iter = 500)
tsne
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/province_clustering.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/province_clustering.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/province_clustering.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/province_clustering.R')
colnames(data_all)
fviz_pca_ind(res,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07","black"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Groups",
repel = TRUE
)
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/province_clustering.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/province_clustering.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/province_clustering.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/province_clustering.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/province_clustering.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/province_clustering.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/province_clustering.R')
colnames(data_all)
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/province_clustering.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/province_clustering.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/province_clustering.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/province_clustering.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/province_clustering.R')
"outputs/tsne/c",i,".rds",sep = "")
tsne <-readRDS(tsn
tsne_file = paste("outputs/tsne/c",i,".rds",sep = "")
tsne <-readRDS(tsne_file)
tsne_file = paste("outputs/tsne/c",i,".rds",sep = "")
i =
5
tsne_file = paste("outputs/tsne/c",i,".rds",sep = "")
tsne <-readRDS(tsne_file)
ggplot(tsne$Y,aes = c("Dimension1","Dimension2"),label = rownames(new_data))
data_file = paste("outputs/pca/d",i,".rds",sep = "")
new_data <- readRDS(data_file)
ggplot(tsne$Y,aes = c("Dimension1","Dimension2"),label = rownames(new_data))
ggplot(as.data.frame(tsne$Y),aes = c("Dimension1","Dimension2"),label = rownames(new_data))
ggplot(as.data.frame(tsne$Y),label = rownames(new_data))
ggplot(as.data.frame(tsne$Y))
tsne$Y
(as.data.frame(tsne$Y))
tsne_data <- as.data.frame(tsne$Y)
colnames(tsne_data) <- c("Dimension1","Dimension2")
library(ggplot2)
ggplot(tsne_data)
jpeg
jpeg("tmp.jpeg")
ggplot(tsne_data)
ggplot(as.data.frame(tsne$Y),aes = c("Dimension1","Dimension2"))
dev.off()
plot(tsne$Y, t='n', main="tsne",xlab = "Dimension1",ylab="Dimension2")
tsne_file = paste("outputs/tsne/c",i,".rds",sep = "")
tsne <-readRDS(tsne_file)
tsne_data <- as.data.frame(tsne$Y)
plot(tsne$Y, t='n', main="tsne",xlab = "Dimension1",ylab="Dimension2")
text(tsne$Y, labels=rownames(new_data), col=colors[groups])
ggplot(as.data.frame(tsne$Y),aes = c("Dimension1","Dimension2"),label = rownames(new_data))
tsne_data <- as.data.frame(tsne$Y)
colnames(tsne_data) <- c("x","y")
ggplot(tsne_data) + geom_point(aes(x=, y=y, color=new_data$group))
ggplot(tsne_data) + geom_point(aes(x=x, y=y, color=new_data$group))
ggplot(tsne_data) + geom_point(aes(x=x, y=y, color=factor(new_data$group)))
/pca/d",i,".rds",sep = "")
new_data <- readRDS(data_file)
groups <- as.factor(new_data$group)
new_data$group <- NULL
res <- prcomp(new_data,scale = TRUE)
pca_file = paste("outputs/pca/c",i,".rds",sep  = "")
res <- readRDS(pca_file)
p <- fviz_pca_ind(res,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07","black"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Groups",
repel = TRUE,
geom = "point"
)
p
p <- fviz_pca_ind(res,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07","black"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Groups",
repel = FALSE,
geom = "point"
)
p
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/plot_visuals.R')
library(Rtsne)
library(factoextra)
library(ggpubr)
pca_list = c()
tsne_list  = c()
for(i in seq(1,5)){
data_file = paste("outputs/pca/d",i,".rds",sep = "")
new_data <- readRDS(data_file)
groups <- as.factor(new_data$group)
new_data$group <- NULL
res <- prcomp(new_data,scale = TRUE)
pca_file = paste("outputs/pca/c",i,".rds",sep  = "")
res <- readRDS(pca_file)
p <- fviz_pca_ind(res,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07","black"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Groups",
repel = FALSE,
geom = "point"
)
pca_list = c(pca_list,p)
colors = rainbow(length(unique(groups)))
names(colors) = unique(groups)
tsne_file = paste("outputs/tsne/c",i,".rds",sep = "")
tsne <-readRDS(tsne_file)
tsne_data <- as.data.frame(tsne$Y)
colnames(tsne_data) <- c("x","y")
Groups <- factor(new_data$group)
t <- ggplot(tsne_data) + geom_point(aes(x=x, y=y, color=Groups))
tsne_list = c(tsne_list,t)
}
g <- ggarrange(ggarrange(tsne_list[1:4],ncol = 2,nrow = 2,labels = c("A","B","C","D")),tsne_list[5],nrow = 2,labels = c("","E"),heights = c(2,1))
tsne_list
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/plot_visuals.R')
tsne_list
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/plot_visuals.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/plot_visuals.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/plot_visuals.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/plot_visuals.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/plot_visuals.R')
rlang::last_error()
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/plot_visuals.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/plot_visuals.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/plot_visuals.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/plot_visuals.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/plot_visuals.R')
new_data
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/plot_visuals.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/plot_visuals.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/plot_visuals.R')
class(tsne_list)
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/plot_visuals.R')
tsne_list[c(1)]
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/plot_visuals.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/plot_visuals.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/plot_visuals.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/plot_visuals.R')
res
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/plot_visuals.R')
g <- ggarrange(ggarrange(plotlist =tsne_list[c(1,2,3,4)],ncol = 2,nrow = 2,labels = c("A","B","C","D")),tsne_list[[5]],nrow = 2,labels = c("","E"),heights = c(2,1),align = "hv")
g <- ggarrange(ggarrange(plotlist =tsne_list[c(1,2,3,4)],ncol = 2,nrow = 2,labels = c("A","B","C","D")),tsne_list[[5]],nrow = 2,labels = c("","E"),heights = c(2,1),align = "h")
g
g <- ggarrange(ggarrange(plotlist =tsne_list[c(1,2,3,4)],ncol = 2,nrow = 2,labels = c("A","B","C","D")),tsne_list[[5]],nrow = 2,labels = c("","E"),heights = c(2,1),common.legend = T,legend = "top")
g
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/plot_visuals.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/plot_visuals.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/plot_visuals.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/plot_visuals.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/plot_visuals.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/plot_visuals.R')
p <- fviz_pca_(res,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07","black"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
# legend.title = "Groups",
legend="none",
repel = FALSE,
geom = "point"
)  + ggtitle("PCA") + labs(x = "Dimension1",y="Dimension2",color="Regions")
p <- fviz_pca_ind(res,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07","black"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
# legend.title = "Groups",
legend="none",
repel = FALSE,
geom = "point"
)  + ggtitle("PCA") + labs(x = "Dimension1",y="Dimension2",color="Regions")
p
p <- fviz_pca_ind(res,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07","black"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
# legend.title = "Groups",
# legend="none",
repel = FALSE,
geom = "point"
)  + ggtitle("PCA") + labs(x = "Dimension1",y="Dimension2",color="Regions")
p
p <- fviz_pca_ind(res,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07","black"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Regions",
# legend="none",
repel = FALSE,
geom = "point"
)  + ggtitle("PCA") + labs(x = "Dimension1",y="Dimension2")
p
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/plot_visuals.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
c(1:5)
c(1,2,3)
z <-c(1,2,3)
class(z)
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
filename="1"
cut_off <- 0 #end_date - as.Date("2020-01-23")
load(paste0("outputs/bootstrap_fit_",filename,".RData"))
S_plot = S_plot[,!is.na(S_plot[t_period,])]
I_plot = I_plot[,!is.na(I_plot[t_period,])]
C_local_plot = C_local_plot[,!is.na(C_local_plot[t_period,])]
C_local_plot_raw = C_local_plot_raw[,!is.na(C_local_plot_raw[t_period,])] # output raw cases
Rep_local_plot = Rep_local_plot[,!is.na(Rep_local_plot[t_period,])]
C_plot = C_plot[,!is.na(C_plot[t_period,])]
Rep_plot = Rep_plot[,!is.na(Rep_plot[t_period,])]
R0_plot = R0_plot[,!is.na(R0_plot[t_period,])]
S_quantile <- apply(S_plot,1,function(x){quantile(x,c(0.025,0.25,0.5,0.75,0.975))})/theta[["pop_travel"]] # proportion
Inf_quantile <- apply(I_plot,1,function(x){quantile(x,c(0.025,0.25,0.5,0.75,0.975))})/theta[["pop_travel"]] # proportion
# Local cases
Case_local_quantile <- apply(C_local_plot,1,function(x){quantile(x,c(0.025,0.25,0.5,0.75,0.975))})
Case_local_quantile_onset <- theta[["onset_prop"]]*Case_local_quantile
# DEBUG - output data
#
Case_local_quantile_raw <- apply(C_local_plot_real,1,function(x){quantile(x,c(0.025,0.25,0.5,0.75,0.975))})
aa <- cbind(date_range,round(Case_local_quantile_raw[3,]))
aa <- as_tibble(aa); names(aa) <- c("date","cases"); aa$date <- as.Date(aa$date,origin="1970-01-01")
cm <- as.data.frame(aa)
cm <- cbind(cm,case_data_Ezhou)
colnames(cm)[3] <- "real"
write_csv(cm,paste("outputs/case_models/validation/case_model_",group_name,".csv",sep = ""))
# plot(date_range,cumsum(case_data_Ezhou),type = 'p',col = "blue",ylab = "Cumulative Incidence",pch = 16, frame = FALSE)
# lines(date_range,cumsum(round(Case_local_quantile_raw[3,])),col = "red")
real_df <- data.frame("Dates" = date_range,"Inc" = cumsum(case_data_Ezhou))
pred_df <- data.frame("Dates" = date_range,"Inc" = cumsum(round(Case_local_quantile_raw[3,])))
real_df
g_case <- ggplot()+geom_point(pred_df,aes(x=Dates,y=Inc),color="blue") + geom_line(pred_df,aes(x=Dates,y=Inc),color="red") + labs(x = "Dates", y= "Cumulative Incidence")
g_case <- ggplot()+geom_point(data = pred_df,aes(x=Dates,y=Inc),color="blue") + geom_line(data = pred_df,aes(x=Dates,y=Inc),color="red") + labs(x = "Dates", y= "Cumulative Incidence")
g_case
g_case
# idx_pred <- date_range[length(date_range)-forecast_window]
# abline(v = idx_pred,col = "red")
# print(round(Case_local_quantile_raw[3,]))
print(g_case)
g_case <- ggplot()+geom_point(data = real_df,aes(x=Dates,y=Inc),color="blue") + geom_line(data = pred_df,aes(x=Dates,y=Inc),color="red") + labs(x = "Dates", y= "Cumulative Incidence")
g_case
ggplot()+geom_point(data = real_df,aes(x=Dates,y=Inc),color="blue") + geom_line(data = pred_df,aes(x=Dates,y=Inc),color="red") + labs(x = "Dates", y= "Cumulative Incidence")
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/driver.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/driver.R')
