end_date
(case_data_Ezhou)
length(case_data_Ezhou)
length(case_data_Ezhou)0
(case_data_Ezhou[71:79])
(case_data_Ezhou[1:9])
ncol(case_data_Ezhou)
ncol(confirmed_cases_Ezhou_time)
ncol(confirmed_cases_all)
length(date_range)
date_range
colnames(confirmed_cases_all)
as.Date("T20200111")
as.Date("T20200111","T%y%m%d")
as.Date("T20200111","\T%y%m%d")
as.Date("T20200111","T%y%m%d")
sdate = "T20200111"
sdate = sdate[2:length(sdate)]
sdate
sdate = as.character("T20200111")
sdate
sdate = sdate[2:length(sdate)]
sdate
sdate = as.character("T20200111")
sdate = substr(sdate,2)
sdate = substr(sdate,2,length(sdate))
sdate
length(sdate)
str_length(sdate)
sdate = "T20200111"
str_length(sdate)
sdate = substr(sdate,2,str_length(sdate))
sdate
as.Date(sdate,"%Y%m%d")
col_dates <- colnames(confirmed_cases_all)
strdate <- substr(col_dates[d],str_length(col_dates[d]))
start_date <- as.Date(strdate,"%Y%m%d")
end_date <- as.Date("2020-04-07")
col_dates <- colnames(confirmed_cases_all)
strdate <- substr(col_dates[d],2,str_length(col_dates[d]))
start_date <- as.Date(strdate,"%Y%m%d")
end_date <- as.Date("2020-04-07")
date_range <- seq(start_date,end_date,1)
length(date_range)
date_range
col_dates <- colnames(confirmed_cases_all)
strdate <- substr(col_dates[d+1],2,str_length(col_dates[d]))
start_date <- as.Date(strdate,"%Y%m%d")
end_date <- as.Date("2020-04-07")
date_range
date_range <- seq(start_date,end_date,1)
date_range
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/load_timeseries_data.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/load_timeseries_data.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/load_timeseries_data.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/load_timeseries_data.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/load_timeseries_data.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/load_timeseries_data.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/load_timeseries_data.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
traveFrac
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
d
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/load_timeseries_data.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
start
start_date
date_range
case_data_Ezhou
length(case_data_Ezhou)
length(date_range)
group
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
date_range
theta[["pop_travel"]]
case_data_Ezhou
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
t_period
length(date_range)
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/R/load_timeseries_data.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
case_data_Ezhou
case_data_Ezhou
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
t_period
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
case_data_Ezhou
case_data_Ezhou <- rep(0,10) + case_data_Ezhou
rep(0,11)
case_data_Ezhou
s <- rep(0,10) + rep(case_data_Ezhou)
s <- array(0,dim = (length(case_data_Ezhou + 10)))
s[11:length(s)] <- case_data_Ezhou
s <- array(0,dim = (length(case_data_Ezhou) + 10))
case_data_Ezhou
length(case_data_Ezhou)
s
length(s)
s[10:86] <- case_data_Ezhou[1:76]
s[11:86] <- case_data_Ezhou[1:76]
s[11:86] <- case_data_Ezhou
s[11:length(s)] <- case_data_Ezhou
case_data_Ezhou<-s
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
case_data_Ezhou
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
r0_value_output()
traceback()
load(paste0("outputs/bootstrap_fit_",filename,".RData"))
write_csv(as_tibble(R0_plot),"out_R0.csv")
write_csv(as_tibble(date_range),"out_date.csv")
filename = "1"
load(paste0("outputs/bootstrap_fit_",filename,".RData"))
write_csv(as_tibble(R0_plot),"out_R0.csv")
write_csv(as_tibble(date_range),"out_date.csv")
period_interest <- start_date + 10#as.Date("2020-01-15")
R0_plot = R0_plot[,!is.na(R0_plot[t_period,])]
med_R0 <- apply(R0_plot,1,function(x){quantile(x,c(0.5))})
c.text(med_R0[match(period_interest,date_range)])
period_interest <- c(start_date+1,start_date+11)#as.Date(c("2020-01-01","2020-01-23"))
index_pick <- match(period_interest,date_range)
R0_all <- R0_plot[index_pick[1]:index_pick[2],]
med_R03 <- apply(R0_all,1,function(x){quantile(x,c(0.5))})
period_interest <- start_date + 5#as.Date(c("2020-01-16","2020-01-16"))
index_pick <- match(period_interest,date_range)
R0_all <- R0_plot[index_pick[1]:index_pick[2],]
med_R02 <- apply(R0_all,1,function(x){quantile(x,c(0.5))})
med_R02 <- R0_all; dim(med_R02) <- NULL
ate(c("2020-01-31","2020-01-31"))
index_pick <- match(period_interest,date_range)
R0_all <- R0_plot[index_pick[1]:index_pick[2],]
period_interest <- as.Date(c("2020-01-31","2020-01-31"))
index_pick <- match(period_interest,date_range)
R0_all <- R0_plot[index_pick[1]:index_pick[2],]
#med_R0 <-
med_R0 <- R0_all; dim(med_R0) <- NULL
out_r <- cbind(c.text(med_R02),c.text(med_R0),c.text(med_R03))
out_r <- as_tibble(out_r); names(out_r) <- c("before","after")
R0_all
plot_dispersion()
plot_dispersion()
plot_dispersion <- function(filename="1"){
# filename="1"
load(paste0("outputs/bootstrap_fit_",filename,".RData"))
# Extract R credible interval
period_interest <- as.Date(c(start_date,start_date+5))
par(mfrow=c(1,2),mar=c(3,3,1,1),mgp=c(2,0.7,0))
index_pick <- match(period_interest,date_range)
R0_all <- R0_plot[index_pick[1]:index_pick[2],]
#dim(R0_all) <- NULL # collapse data
med_R0 <- apply(R0_all,2,function(x){quantile(x,0.5)})
R0_CrI <- quantile(med_R0,c(0.025,0.25,0.5,0.75,0.975))
print(med_R0)
print(R0_CrI)
MERS_k <- 0.26
SARS_k <- 0.16
k_seq <- seq(0.01,1,0.01)
# Outbreak calcs
R0_med <- 1-sapply(k_seq,function(x){numerical_solver(R0_CrI[3],x)})
R0_CrI_1 <- 1-sapply(k_seq,function(x){numerical_solver(R0_CrI[1],x)})
R0_CrI_2 <- 1-sapply(k_seq,function(x){numerical_solver(R0_CrI[5],x)})
R0_CrI_1_50 <- 1-sapply(k_seq,function(x){numerical_solver(R0_CrI[2],x)})
R0_CrI_2_50 <- 1-sapply(k_seq,function(x){numerical_solver(R0_CrI[4],x)})
# Estimate range
c(R0_med[k_seq==SARS_k],R0_med[k_seq==MERS_k])
# Plot results
plot(k_seq,R0_med,type="l",ylim=c(0,1),xlab=c("extent of homogeneity in transmission"),ylab="probability of large outbreak",col="white",xaxs="i",yaxs="i")
polygon(c(k_seq,rev(k_seq)),c(R0_CrI_1,rev(R0_CrI_2)),lty=0,col=rgb(0,0.3,1,0.35))
polygon(c(k_seq,rev(k_seq)),c(R0_CrI_1_50,rev(R0_CrI_2_50)),lty=0,col=rgb(0,0.3,1,0.35))
lines(k_seq,R0_med,col="blue")
lines(c(MERS_k,MERS_k),c(-1,10),lty=2); text(labels="MERS-CoV",x=1.02*MERS_k,y=0.7,adj=0,col="black")
lines(c(SARS_k,SARS_k),c(-1,10),lty=2); text(labels="SARS",x=1.02*SARS_k,y=0.6,adj=0,col="black")
title(LETTERS[1],adj=0)
n_seq <- seq(0,10,1)
ext_m <- 1-(1-R0_med[k_seq==SARS_k])^n_seq
ext_1 <- 1-(1-R0_CrI_1[k_seq==SARS_k])^n_seq
ext_2 <- 1-(1-R0_CrI_2[k_seq==SARS_k])^n_seq
ext_11 <- 1-(1-R0_CrI_1_50[k_seq==SARS_k])^n_seq
ext_22 <- 1-(1-R0_CrI_2_50[k_seq==SARS_k])^n_seq
plot(n_seq,ext_m,type="l",ylim=c(0,1),xlim=c(-0.5,10.5),xlab=c("number of introductions"),ylab="probability of large outbreak",col="white",xaxs="i",yaxs="i")
points(n_seq,ext_m,col="blue",pch=19)
for(ii in 1:length(n_seq)){
lines(c(n_seq[ii],n_seq[ii]),c(ext_1[ii],ext_2[ii]),col="blue")
}
title(LETTERS[2],adj=0)
dev.copy(pdf,paste("plots/Figure_3.pdf",sep=""),width=8,height=3)
#dev.copy(png,paste("plots/calc_1.png",sep=""),units="cm",width=20,height=10,res=150)
dev.off()
}
plot_dispersion()
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
View(confirmed_cases_Ezhou_time)
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
warnings()
lm(~case_data_Ezhou)
pred <- read_csv("outputs/case_model.csv")
pred <- pred$cases
lm(pred~case_data_Ezhou)
z = lm(pred~case_data_Ezhou)
z
z$residuals
z$model
sum(z$residuals)
z$df.residual
z$residual
z$coefficients
DMwR::regr.eval(case_data_Ezhou,pred)
plot_dispersion <- function(filename="1"){
# filename="1"
load(paste0("outputs/bootstrap_fit_",filename,".RData"))
# Extract R credible interval
period_interest <- as.Date(c(start_date+5,start_date+10))
par(mfrow=c(1,2),mar=c(3,3,1,1),mgp=c(2,0.7,0))
index_pick <- match(period_interest,date_range)
R0_all <- R0_plot[index_pick[1]:index_pick[2],]
#dim(R0_all) <- NULL # collapse data
med_R0 <- apply(R0_all,2,function(x){quantile(x,0.5)})
R0_CrI <- quantile(med_R0,c(0.025,0.25,0.5,0.75,0.975))
print(med_R0)
print(R0_CrI)
MERS_k <- 0.26
SARS_k <- 0.16
k_seq <- seq(0.01,1,0.01)
# Outbreak calcs
R0_med <- 1-sapply(k_seq,function(x){numerical_solver(R0_CrI[3],x)})
R0_CrI_1 <- 1-sapply(k_seq,function(x){numerical_solver(R0_CrI[1],x)})
R0_CrI_2 <- 1-sapply(k_seq,function(x){numerical_solver(R0_CrI[5],x)})
R0_CrI_1_50 <- 1-sapply(k_seq,function(x){numerical_solver(R0_CrI[2],x)})
R0_CrI_2_50 <- 1-sapply(k_seq,function(x){numerical_solver(R0_CrI[4],x)})
# Estimate range
c(R0_med[k_seq==SARS_k],R0_med[k_seq==MERS_k])
# Plot results
plot(k_seq,R0_med,type="l",ylim=c(0,1),xlab=c("extent of homogeneity in transmission"),ylab="probability of large outbreak",col="white",xaxs="i",yaxs="i")
polygon(c(k_seq,rev(k_seq)),c(R0_CrI_1,rev(R0_CrI_2)),lty=0,col=rgb(0,0.3,1,0.35))
polygon(c(k_seq,rev(k_seq)),c(R0_CrI_1_50,rev(R0_CrI_2_50)),lty=0,col=rgb(0,0.3,1,0.35))
lines(k_seq,R0_med,col="blue")
lines(c(MERS_k,MERS_k),c(-1,10),lty=2); text(labels="MERS-CoV",x=1.02*MERS_k,y=0.7,adj=0,col="black")
lines(c(SARS_k,SARS_k),c(-1,10),lty=2); text(labels="SARS",x=1.02*SARS_k,y=0.6,adj=0,col="black")
title(LETTERS[1],adj=0)
n_seq <- seq(0,10,1)
ext_m <- 1-(1-R0_med[k_seq==SARS_k])^n_seq
ext_1 <- 1-(1-R0_CrI_1[k_seq==SARS_k])^n_seq
ext_2 <- 1-(1-R0_CrI_2[k_seq==SARS_k])^n_seq
ext_11 <- 1-(1-R0_CrI_1_50[k_seq==SARS_k])^n_seq
ext_22 <- 1-(1-R0_CrI_2_50[k_seq==SARS_k])^n_seq
plot(n_seq,ext_m,type="l",ylim=c(0,1),xlim=c(-0.5,10.5),xlab=c("number of introductions"),ylab="probability of large outbreak",col="white",xaxs="i",yaxs="i")
points(n_seq,ext_m,col="blue",pch=19)
for(ii in 1:length(n_seq)){
lines(c(n_seq[ii],n_seq[ii]),c(ext_1[ii],ext_2[ii]),col="blue")
}
title(LETTERS[2],adj=0)
dev.copy(pdf,paste("plots/Figure_3.pdf",sep=""),width=8,height=3)
#dev.copy(png,paste("plots/calc_1.png",sep=""),units="cm",width=20,height=10,res=150)
dev.off()
}
plot_dispersion()
plot_dispersion <- function(filename="1"){
# filename="1"
load(paste0("outputs/bootstrap_fit_",filename,".RData"))
# Extract R credible interval
period_interest <- as.Date(c(start_date,start_date+7))
par(mfrow=c(1,2),mar=c(3,3,1,1),mgp=c(2,0.7,0))
index_pick <- match(period_interest,date_range)
R0_all <- R0_plot[index_pick[1]:index_pick[2],]
#dim(R0_all) <- NULL # collapse data
med_R0 <- apply(R0_all,2,function(x){quantile(x,0.5)})
R0_CrI <- quantile(med_R0,c(0.025,0.25,0.5,0.75,0.975))
print(med_R0)
print(R0_CrI)
MERS_k <- 0.26
SARS_k <- 0.16
k_seq <- seq(0.01,1,0.01)
# Outbreak calcs
R0_med <- 1-sapply(k_seq,function(x){numerical_solver(R0_CrI[3],x)})
R0_CrI_1 <- 1-sapply(k_seq,function(x){numerical_solver(R0_CrI[1],x)})
R0_CrI_2 <- 1-sapply(k_seq,function(x){numerical_solver(R0_CrI[5],x)})
R0_CrI_1_50 <- 1-sapply(k_seq,function(x){numerical_solver(R0_CrI[2],x)})
R0_CrI_2_50 <- 1-sapply(k_seq,function(x){numerical_solver(R0_CrI[4],x)})
# Estimate range
c(R0_med[k_seq==SARS_k],R0_med[k_seq==MERS_k])
# Plot results
plot(k_seq,R0_med,type="l",ylim=c(0,1),xlab=c("extent of homogeneity in transmission"),ylab="probability of large outbreak",col="white",xaxs="i",yaxs="i")
polygon(c(k_seq,rev(k_seq)),c(R0_CrI_1,rev(R0_CrI_2)),lty=0,col=rgb(0,0.3,1,0.35))
polygon(c(k_seq,rev(k_seq)),c(R0_CrI_1_50,rev(R0_CrI_2_50)),lty=0,col=rgb(0,0.3,1,0.35))
lines(k_seq,R0_med,col="blue")
lines(c(MERS_k,MERS_k),c(-1,10),lty=2); text(labels="MERS-CoV",x=1.02*MERS_k,y=0.7,adj=0,col="black")
lines(c(SARS_k,SARS_k),c(-1,10),lty=2); text(labels="SARS",x=1.02*SARS_k,y=0.6,adj=0,col="black")
title(LETTERS[1],adj=0)
n_seq <- seq(0,10,1)
ext_m <- 1-(1-R0_med[k_seq==SARS_k])^n_seq
ext_1 <- 1-(1-R0_CrI_1[k_seq==SARS_k])^n_seq
ext_2 <- 1-(1-R0_CrI_2[k_seq==SARS_k])^n_seq
ext_11 <- 1-(1-R0_CrI_1_50[k_seq==SARS_k])^n_seq
ext_22 <- 1-(1-R0_CrI_2_50[k_seq==SARS_k])^n_seq
plot(n_seq,ext_m,type="l",ylim=c(0,1),xlim=c(-0.5,10.5),xlab=c("number of introductions"),ylab="probability of large outbreak",col="white",xaxs="i",yaxs="i")
points(n_seq,ext_m,col="blue",pch=19)
for(ii in 1:length(n_seq)){
lines(c(n_seq[ii],n_seq[ii]),c(ext_1[ii],ext_2[ii]),col="blue")
}
title(LETTERS[2],adj=0)
dev.copy(pdf,paste("plots/Figure_3.pdf",sep=""),width=8,height=3)
#dev.copy(png,paste("plots/calc_1.png",sep=""),units="cm",width=20,height=10,res=150)
dev.off()
}
plot_dispersion()
group
china_incidence[group,]
china_incidence[which(china_incidence$Region_EN== group),]
data_init[group,]
group
data_init
source('~/workspace/2020-ncov/stoch_model_V2_paper/scripts/main_model.R')
case_data_Ezhou
N <- theta[["pop_travel"]]
parms <- c(N=N,beta=0.001, nu = 1/4.6)
times <- seq(0,30,0.1)
x0 <- c(N,12,0)
stateMatrix <- ode(y=x0, times, sir, parms)
colnames(stateMatrix) <- c("time","S","I","R")
plot(stateMatrix[,"time"], stateMatrix[,"S"], type="l", lwd=2,
xlab="Time", ylab="Population Size")
lines(stateMatrix[,"time"], stateMatrix[,"I"], col="red", lwd=2)
lines(stateMatrix[,"time"], stateMatrix[,"R"], col="green", lwd=2)
legend("right", c("S","I","R"), col=c("black","red","green"), lwd=2)
cumdata <- cumsum(case_data_Ezhou[12:length(case_data_Ezhou)])
days <- 1:length(cumdata)
plot(days, cumdata, pch=16, xlab="Days", ylab="Cumulative Incidences")
sum(case_data_Ezhou)
require(deSolve)
sir <- function(t,x,parms){
S <- x[1]
I <- x[2]
R <- x[3]
with(as.list(parms),
{
dS <- -beta*S*I
dI <- beta*S*I - nu*I
dR <- nu*I
res <- c(dS,dI,dR)
list(res)
})
}
N <- theta[["pop_travel"]]
parms <- c(N=N,beta=0.001, nu = 1/4.6)
times <- seq(0,30,0.1)
x0 <- c(N,12,0)
stateMatrix <- ode(y=x0, times, sir, parms)
colnames(stateMatrix) <- c("time","S","I","R")
plot(stateMatrix[,"time"], stateMatrix[,"S"], type="l", lwd=2,
xlab="Time", ylab="Population Size")
lines(stateMatrix[,"time"], stateMatrix[,"I"], col="red", lwd=2)
lines(stateMatrix[,"time"], stateMatrix[,"R"], col="green", lwd=2)
legend("right", c("S","I","R"), col=c("black","red","green"), lwd=2)
cumdata <- cumsum(case_data_Ezhou[12:length(case_data_Ezhou)])
days <- 1:length(cumdata)
plot(days, cumdata, pch=16, xlab="Days", ylab="Cumulative Incidences")
stateMatrix
source('~/workspace/2020-ncov/stoch_model_V2_paper/test_script.R')
# xdata <- seq(1,t_period)
# ydata <- (case_data_Ezhou)
# ydata[ydata == -Inf ] <- 0
# # print(ydata)
# fit1 <- lm(ydata~xdata)
# slope <- coef(fit1)[2]
# slope
#
#
# data <- cbind(xdata,ydata)
# data <- as.data.frame(data)
# colnames(data) <- c("dates","inf")
# library(pomp)
# pomp(
#   data=data,
#   times="dates",t0=0,
#   skeleton=vectorfield(
#     Csnippet("
#       DS = -Beta*S*I/N;
#       DI = Beta*S*I/N-gamma*I;
#       DR = gamma*I;")),
#   rinit=Csnippet("
#       S = S_0;
#       I = I_0;
#       R = N-S_0-I_0;"),
#   statenames=c("S","I","R"),
#   paramnames=c("Beta","gamma","N","S_0","I_0")) -> niameyA
#
#
# sse <- function (params) {
#   x <- trajectory(niameyA,params=params)
#   discrep <- x["I",,]-obs(niameyA)
#   sum(discrep^2)
# }
#
# f1 <- function (beta) {
#     params <- c(Beta=beta,gamma=1,N=1077717,S_0=1077716,I_0=1)
#   sse(params)
# }
#
# beta <- seq(from=5,to=40,by=0.5)
# SSE <- sapply(beta,f1)
#
# beta.hat <- beta[which.min(SSE)]
# plot(beta,SSE,type='l')
# abline(v=beta.hat,lty=2)
#
# coef(niameyA) <- c(Beta=beta.hat,gamma=1,N=1077717,S_0=1077716,I_0=1)
# x <- trajectory(niameyA,format="data.frame")
# ggplot(data=join(as.data.frame(niameyA),x,by='dates'),
#        mapping=aes(x=dates))+
#   geom_line(aes(y=inf),color='black')+
#   geom_line(aes(y=I),color='red')
require(deSolve)
sir <- function(t,x,parms){
S <- x[1]
I <- x[2]
R <- x[3]
with(as.list(parms),
{
dS <- -beta*S*I
dI <- beta*S*I - nu*I
dR <- nu*I
res <- c(dS,dI,dR)
list(res)
})
}
N <- theta[["pop_travel"]]
parms <- c(N=N,beta=0.001, nu = 1/4.6)
times <- seq(0,30,0.1)
x0 <- c(N,1,0)
stateMatrix <- ode(y=x0, times, sir, parms)
colnames(stateMatrix) <- c("time","S","I","R")
plot(stateMatrix[,"time"], stateMatrix[,"S"], type="l", lwd=2,
xlab="Time", ylab="Population Size")
lines(stateMatrix[,"time"], stateMatrix[,"I"], col="red", lwd=2)
lines(stateMatrix[,"time"], stateMatrix[,"R"], col="green", lwd=2)
legend("right", c("S","I","R"), col=c("black","red","green"), lwd=2)
cumdata <- cumsum(case_data_Ezhou[12:length(case_data_Ezhou)])
days <- 1:length(cumdata)
plot(days, cumdata, pch=16, xlab="Days", ylab="Cumulative Incidences")
stateMatrix
install.packages("bbmle")
source('~/workspace/2020-ncov/stoch_model_V2_paper/test_script.R')
summary(fit)
theta <- as.numeric(c(plogis(coef(fit)[1:2]),
exp(coef(fit)[3:4])) )
theta
theta[1]/theta[2]
N
source('~/workspace/2020-ncov/stoch_model_V2_paper/test_script.R')
summary(fit)
fit@vcov
theta <- as.numeric(c(plogis(coef(fit)[1:2]) )
theta
theta
theta <- as.numeric(c(plogis(coef(fit)[1:2]) )
;
theta <- as.numeric(plogis(coef(fit)[1:2]) )
theta
parms <- c(beta=theta2[1], nu = theta2[2])
times <- seq(0,30,0.1)
x0 <- c(N,12,0)
stateMatrix2 <- ode(y=x0, times, sir, parms)
colnames(stateMatrix2) <- c("time","S","I","R")
plot(stateMatrix2[,"time"], stateMatrix2[,"R"] + stateMatrix2[,"I"], type="l", lwd=2,
xaxs="i", xlab="Time", ylab="Cumulative Deaths")
lines(stateMatrix1[,"time"], stateMatrix1[,"R"], col=grey(0.85), lwd=2)
points(days, cumdata, pch=16, col="red")
legend("topleft", c("Poisson", "Gaussian"), lwd=2, col=c("black",grey(0.85)))
parms <- c(beta=theta2[1], nu = theta2[2])
times <- seq(0,30,0.1)
x0 <- c(N,12,0)
stateMatrix2 <- ode(y=x0, times, sir, parms)
colnames(stateMatrix2) <- c("time","S","I","R")
plot(stateMatrix2[,"time"], stateMatrix2[,"R"] + stateMatrix2[,"I"], type="l", lwd=2,
xaxs="i", xlab="Time", ylab="Cumulative Deaths")
# lines(stateMatrix1[,"time"], stateMatrix1[,"R"], col=grey(0.85), lwd=2)
points(days, cumdata, pch=16, col="red")
legend("topleft", c("Poisson", "Gaussian"), lwd=2, col=c("black",grey(0.85)))
